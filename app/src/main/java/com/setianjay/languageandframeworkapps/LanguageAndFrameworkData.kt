package com.setianjay.languageandframeworkapps

object LanguageAndFrameworkData {

    private val listLanguages = listOf(
        listOf(
            R.drawable.logo_c,
            "C",
            "C is a general-purpose, procedural computer programming language supporting structured programming, lexical variable scope, and recursion, with a static type system.\n\nBy design, C provides constructs that map efficiently to typical machine instructions. It has found lasting use in applications previously coded in assembly language. Such applications include operating systems and various application software for computer architectures that range from supercomputers to PLCs and embedded systems.\n\nA successor to the programming language B, C was originally developed at Bell Labs by Dennis Ritchie between 1972 and 1973 to construct utilities running on Unix. It was applied to re-implementing the kernel of the Unix operating system. During the 1980s, C gradually gained popularity. It has become one of the most widely used programming languages, with C compilers from various vendors available for the majority of existing computer architectures and operating systems.\n\nC has been standardized by the ANSI since 1989 (ANSI C) and by the International Organization for Standardization (ISO). C is an imperative procedural language. It was designed to be compiled to provide low-level access to memory and language constructs that map efficiently to machine instructions, all with minimal runtime support.\n\nDespite its low-level capabilities, the language was designed to encourage cross-platform programming. A standards-compliant C program written with portability in mind can be compiled for a wide variety of computer platforms and operating systems with few changes to its source code.\n\nAs of January 2021, C was ranked first in the TIOBE index, a measure of the popularity of programming languages, moving up from the no. 2 spot the previous year."
        ),
        listOf(
            R.drawable.logo_cpp,
            "C++",
            "C++ is a general-purpose programming language created by Bjarne Stroustrup as an extension of the C programming language, or \"C with Classes\".\n\nThe language has expanded significantly over time, and modern C++ now has object-oriented, generic, and functional features in addition to facilities for low-level memory manipulation.\n\nIt is almost always implemented as a compiled language, and many vendors provide C++ compilers, including the Free Software Foundation, LLVM, Microsoft, Intel, Oracle, and IBM, so it is available on many platforms.\n\nC++ was designed with an orientation toward system programming and embedded, resource-constrained software and large systems, with performance, efficiency, and flexibility of use as its design highlights.\n\nC++ has also been found useful in many other contexts, with key strengths being software infrastructure and resource-constrained applications, including desktop applications, video games, servers (e.g. e-commerce, web search, or databases), and performance-critical applications (e.g. telephone switches or space probes).\n\nC++ is standardized by the International Organization for Standardization (ISO), with the latest standard version ratified and published by ISO in December 2020 as ISO/IEC 14882:2020 (informally known as C++20).\n\nThe C++ programming language was initially standardized in 1998 as ISO/IEC 14882:1998, which was then amended by the C++03, C++11, C++14, and C++17 standards.\n\nThe current C++20 standard supersedes these with new features and an enlarged standard library. Before the initial standardization in 1998, C++ was developed by Danish computer scientist Bjarne Stroustrup at Bell Labs since 1979 as an extension of the C language; he wanted an efficient and flexible language similar to C that also provided high-level features for program organization.\n\nSince 2012, C++ has been on a three-year release schedule with C++23 as the next planned standard."
        ),
        listOf(
            R.drawable.logo_dart,
            "Dart",
            "Dart is a programming language designed for client development, such as for the web and mobile apps. It is developed by Google and can also be used to build server and desktop applications.\n\nDart is an object-oriented, class-based, garbage-collected language with C-style syntax. Dart can compile to either native code or JavaScript. It supports interfaces, mixins, abstract classes, reified generics, and type inference. Dart was unveiled at the GOTO conference in Aarhus, Denmark, October 10–12, 2011. The project was founded by Lars Bak and Kasper Lund. Dart 1.0 was released on November 14, 2013.\n\nDart initially had a mixed reception and the Dart initiative has been criticized by some for fragmenting the web, due to the original plans to include a Dart VM in Chrome.\n\nThose plans were dropped in 2015 with the 1.9 release of Dart to focus instead on compiling Dart to JavaScript.In August 2018, Dart 2.0 was released, with language changes including a sound type system.\n\nDart 2.6 introduced a new extension, dart2native. The feature extends native compilation to the Linux, macOS, and Windows desktop platforms. Earlier developers were able to create new tools only using Android or iOS devices. Moreover, with this extension it becomes possible to compose a Dart program into self-contained executables.\n\nThus, according to the company representatives, it’s not obligatory now to have Dart SDK installed, the self-contained executables can now start running in a few seconds. The new extension is also integrated with Flutter toolkit, thus making it possible to use the compiler on small services (backend supporting for example)."
        ),
        listOf(
            R.drawable.logo_golang,
            "Golang",
            "Go is a statically typed, compiled programming language designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. Go was designed at Google in 2007 to improve programming productivity in an era of multicore, networked machines and large codebase.\n\nThe designers wanted to address criticism of other languages in use at Google, but keep their useful characteristics: - Static typing and run-time efficiency (like C),- Readability and usability (like Python or JavaScript),- High performance networking and multiprocessing.\n\nThe designers were primarily motivated by their shared dislike of C++.\"Go is a statically typed, compiled programming language designed at Google by Robert Griesemer, Rob Pike, and Ken Thompson. Go was designed at Google in 2007 to improve programming productivity in an era of multicore, networked machines and large codebases.\n\nThe designers wanted to address criticism of other languages in use at Google, but keep their useful characteristics: - Static typing and run-time efficiency (like C),- Readability and usability (like Python or JavaScript),- High performance networking and multiprocessing. The designers were primarily motivated by their shared dislike of C++. Go was publicly announced in November 2009, and version 1.0 was released in March 2012. Go is widely used in production at Google and in many other organizations and open-source projects."
        ),
        listOf(
            R.drawable.logo_java,
            "Java",
            "Java was originally developed by James Gosling at Sun Microsystems (which has since been acquired by Oracle) and released in 1995 as a core component of Sun Microsystems' Java platform.\n\nThe naming of java is taken from coffee originating from the island of Indonesia, namely Java. \n\nJava is a high-level, class-based, object-oriented programming language that is designed to have as few implementation dependencies as possible. It is a general-purpose programming language intended to let application developers write once, run anywhere (WORA), meaning that compiled Java code can run on all platforms that support Java without the need for recompilation.\n\nJava applications are typically compiled to bytecode that can run on any Java virtual machine (JVM) regardless of the underlying computer architecture. The syntax of Java is similar to C and C++, but has fewer low-level facilities than either of them.\n\nThe Java runtime provides dynamic capabilities (such as reflection and runtime code modification) that are typically not available in traditional compiled languages. As of 2019, Java was one of the most popular programming languages in use according to GitHub, particularly for client-server web applications, with a reported 9 million developers."
        ),
        listOf(
            R.drawable.logo_javascript,
            "Javascript",
            "JavaScript is high-level, often just-in-time compiled, and multi-paradigm. It has curly-bracket syntax, dynamic typing, prototype-based object-orientation, and first-class functions.\n\nThe Mosaic web browser was released in 1993. As the first browser with a graphical user interface accessible to non-technical people, it played a prominent role in the rapid growth of the nascent World Wide Web. The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. Navigator quickly became the most used browser.\n\nDuring these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the burgeoning web development scene to remove this limitation, so in 1995, Netscape decided to add a scripting language to Navigator.\n\nThey pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java programming language, while also hiring Brendan Eich to embed the Scheme language.\n\nNetscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages. Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.\n\nThe choice of the JavaScript name has caused confusion, implying that it is directly related to Java. Since Java was the hot new programming language at the time, this has been characterized as a marketing ploy by Netscape to give its own new language cachet."
        ),
        listOf(
            R.drawable.logo_kotlin,
            "Kotlin",
            "Kotlin language was created by JetBrains (same company which developed famous Java IDE IntelliJ IDEA) in 2010. It has been open sourced since 2012.\n\nKotlin get its name from an island named Kotlin island in Russia. The first version of kotlin was released in 2016 and latest version (in 2020) is Kotlin v1.3.\n\nBrief history regarding Kotlin versions:Kotlin v1.0, the first version of Kotlin was released in February, 2016. It was officially the first stable version of Kotlin.\n\nKotlin v1.1 was released in March, 2017. The main features added in this release were introducing interoperability with JavaScript and support for coroutines (not stable though).\n\nKotlin is a cross-platform, statically typed, general-purpose programming language with type inference. Kotlin is designed to interoperate fully with Java, and the JVM version of Kotlin's standard library depends on the Java Class Library, but type inference allows its syntax to be more concise.\n\nKotlin mainly targets the JVM, but also compiles to JavaScript (e.g., for frontend web applications using React) or native code (via LLVM); e.g., for native iOS apps sharing business logic with Android apps. Language development costs are borne by JetBrains, while the Kotlin Foundation protects the Kotlin trademark.\n\nOn 7 May 2019, Google announced that the Kotlin programming language is now its preferred language for Android app developers. Since the release of Android Studio 3.0 in October 2017, Kotlin has been included as an alternative to the standard Java compiler. The Android Kotlin compiler produces Java 6 bytecode by default (which runs in any later JVM), but lets the programmer choose to target Java 8 up to 15, for optimization, or allows for more features, e.g. Java 8 related with Kotlin 1.4, and has experimental record class support for Java 16 compatibility."
        ),
        listOf(
            R.drawable.logo_php,
            "PHP",
            "PHP is a general-purpose scripting language especially suited to web development. It was originally created by Danish-Canadian programmer Rasmus Lerdorf in 1994.\n\nThe PHP reference implementation is now produced by The PHP Group. PHP originally stood for Personal Home Page, but it now stands for the recursive initialize PHP: Hypertext Preprocessor.\n\nPHP code is usually processed on a web server by a PHP interpreter implemented as a module, a daemon or as a Common Gateway Interface (CGI) executable. On a web server, the result of the interpreted and executed PHP code – which may be any type of data, such as generated HTML or binary image data – would form the whole or part of an HTTP response. Various web template systems, web content management systems, and web frameworks exist which can be employed to orchestrate or facilitate the generation of that response.\n\nAdditionally, PHP can be used for many programming tasks outside of the web context, such as standalone graphical applications and robotic drone control. PHP code can also be directly executed from the command line. The standard PHP interpreter, powered by the Zend Engine, is free software released under the PHP License. PHP has been widely ported and can be deployed on most web servers on almost every operating system and platform, free of charge."
        ),
        listOf(
            R.drawable.logo_python,
            "Python",
            "Python is an interpreted high-level general-purpose programming language.Python's design philosophy emphasizes code readability with its notable use of significant indentation.\n\nIts language constructs as well as its object-oriented approach aim to help programmers write clear, logical code for small and large-scale projects.\n\nPython is dynamically-typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly, procedural), object-oriented and functional programming.\n\nPython is often described as a language due to its comprehensive standard library.Guido van Rossum began working on Python in the late 1980s, as a successor to the ABC programming language, and first released it in 1991 as Python 0.9.0.\n\nPython 2.0 was released in 2000 and introduced new features, such as list comprehensions and a garbage collection system using reference counting.\n\nPython 3.0 was released in 2008 and was a major revision of the language that is not completely backward-compatible and much Python 2 code does not run unmodified on Python 3.\n\nPython 2 was discontinued with version 2.7.18 in 2020."
        ),
        listOf(
            R.drawable.logo_ruby,
            "Ruby",
            "Ruby is an interpreted, high-level, general-purpose programming language. It was designed and developed in the mid-1990s by Yukihiro \"Matz\" Matsumoto in Japan.\n\nRuby is dynamically typed and uses garbage collection and just-in-time compilation. It supports multiple programming paradigms, including procedural, object-oriented, and functional programming.\n\nAccording to the creator, Ruby was influenced by Perl, Smalltalk, Eiffel, Ada, BASIC, and Lisp.\n\nMatsumoto has said that Ruby was conceived in 1993. In a 1999 post to the ruby-talk mailing list, he describes some of his early ideas about the language:\n\"I was talking with my colleague about the possibility of an object-oriented scripting language. I knew Perl (Perl4, not Perl5), but I didn't like it really, because it had the smell of a toy language (it still has). The object-oriented language seemed very promising. I knew Python then. But I didn't like it, because I didn't think it was a true object-oriented language – OO features appeared to be add-on to the language. As a language maniac and OO fan for 15 years, I really wanted a genuine object-oriented, easy-to-use scripting language. I looked for but couldn't find one. So I decided to make it\".\n\nMatsumoto describes the design of Ruby as being like a simple Lisp language at its core, with an object system like that of Smalltalk, blocks inspired by higher-order functions, and practical utility like that of Perl.\n\nThe name \"Ruby\" originated during an online chat session between Matsumoto and Keiju Ishitsuka on February 24, 1993, before any code had been written for the language. Initially two names were proposed: \"Coral\" and \"Ruby\". Matsumoto chose the latter in a later e-mail to Ishitsuka. Matsumoto later noted a factor in choosing the name \"Ruby\" – it was the birthstone of one of his colleagues."
        )
    )

    private val listFrameworks = listOf(
        listOf(
            R.drawable.logo_django,
            "Django",
            "Django is a Python-based free and open-source web framework that follows the model–template–views (MTV) architectural pattern. It is maintained by the Django Software Foundation (DSF), an American independent organization established as a 501(c)(3) non-profit. Django's primary goal is to ease the creation of complex, database-driven websites. The framework emphasizes reusability and \"pluggability\" of components, less code, low coupling, rapid development, and the principle of don't repeat yourself. Python is used throughout, even for settings, files, and data models. Django also provides an optional administrative create, read, update and delete interface that is generated dynamically through introspection and configured via admin models.  Django started as an internal project at the Lawrence Journal-World newspaper in 2003. Often, the web development team there had to implement new features or even entire applications within hours. Therefore, Django was created to meet the fast deadlines of journalism web sites, while at the same time keeping the development process clean and maintainable. By the summer of 2005, Django became mature enough to handle several high-traffic sites, and the developers decided to release it to the public as an open source project. The project was named after the jazz guitarist, Django Reinhardt. Now that Django is an open source project, it has gathered developers and users from all over the world. Bug fixes and new features are introduced on a daily basis, and the original development team keeps an eye on the whole process to make sure that Django remains what it is meant to be—a web framework for building clean, maintainable, and reusable web applications."
        ),
        listOf(
            R.drawable.logo_flutter,
            "Flutter",
            "Flutter is an open-source UI software development kit created by Google. It is used to develop cross platform applications for Android, iOS, Linux, Mac, Windows, Google Fuchsia, and the web from a single codebase. In 2015 Google unveiled Flutter, a new SDK based on the Dart language, as the next platform for Android development, and in 2017 an alpha version of it (0.0.6) was released to the public for the first time. At I/O 2017 Google showed off using Flutter and its multi-platform capabilities, and continued promoting it at I/O 2018. Since then, Google has been investing in Flutter and recommending it as the way everyone should be developing mobile apps. In December 2018 Flutter 1.0 was released and made available so that developers could begin using the SDK to make app creation easier. At Google I/O 2019, Flutter support for desktop and web platforms was publicly announced. Tools for developing Flutter apps for Windows, macOS, Linux, and the web were released. In addition to being unstable and untested, desktop development is being held back further by the lack of plugin support, which is very limited mostly because, at the time of writing, plugin tooling is still in the process of being developed, meaning that binaries for the platform-specific code for each platform has to be manually built and linked by editing the Google-provided Makefiles that can be found in Google’s dedicated flutter-desktop-embedding GitHub repository. On the other hand, web support is progressing quickly and shouldn’t take much more than a rebuild of a working Flutter mobile project that doesn’t have any native plugins or platform-specific code."
        ),
        listOf(
            R.drawable.logo_ionic,
            "Ionic",
            "Today, the Ionic framework becomes the world's most popular cross-platform mobile app development technology. The millions of developers around the world have built millions of mobile app with the Ionic framework. The Ionic framework allows developers to use web technologies such as HTML, CSS, and JavaScript to create a high-quality app for mobile and desktop. It provides everything which developers need from front-end design to continuous delivery. Drifty Co. introduced Ionic in the year 2013. It released the first alpha version of the Ionic framework in November 2013. The latest release of Ionic is Ionic v4+ in 2019. We can understand the history of the Ionic framework from the below image. Historically, Ionic 1 was introduced to create mobile apps with angular 1. The Ionic 1 was released at the end of the year 2013. Initially, it does not use a web component. It uses angular one directives to essentially give you a custom angular component which only runs inside the angular app. Ionic 2 was introduced in the year 2016. It is continuing with the previous version by giving the same for angular 2. Angular 2 is the new version of angular, which is entirely different from angular 1. Thus, Ionic 2 again gives only the angular component, not the web component. So we can only use Ionic 2 in angular 2 application. Ionic 3 was introduced in the year 2017. It is continuing with the previous one by adding some new features. This version enhances the Ionic framework but still focus on angular, which was angular 4 at that time. The Ionic team decides that the Ionic 3 is not optimal for future purposes because not all the people are using angular. It does not allow to build a native mobile app or allows to use of vue.js, or react.js framework, you were limited to angular only. Therefore, Ionic 4 is introduced in the year 2019. The Ionic 4 and all the future version of Ionic are based on web components. It builds the native mobile app and Progressive Web Apps (PWAs) with the JavaScript, HTML, and CSS web technologies. It supports all the browser that allows using your HTML elements which can run with any web framework you might be using. Therefore, web components and Ionic 4 can work with any framework. Every new version of Ionic framework releases in every six months with some enhancement. These new versions do not change your entire concept, which you had previously learned in the Ionic."
        ),
        listOf(
            R.drawable.logo_laravel,
            "Laravel",
            "Laravel is a free, open-source PHP web framework, created by Taylor Otwell and intended for the development of web applications following the model–view–controller (MVC) architectural pattern and based on Symfony. Some of the features of Laravel are a modular packaging system with a dedicated dependency manager, different ways for accessing relational databases, utilities that aid in application deployment and maintenance, and its orientation toward syntactic sugar. Taylor Otwell created Laravel as an attempt to provide a more advanced alternative to the CodeIgniter framework, which did not provide certain features such as built-in support for user authentication and authorization. Laravel's first beta release was made available on June 9, 2011, followed by the Laravel 1 release later in the same month. Laravel 1 included built-in support for authentication, localisation, models, views, sessions, routing and other mechanisms, but lacked support for controllers that prevented it from being a true MVC framework. Laravel 2 was released in September 2011, bringing various improvements from the author and community. Major new features included the support for controllers, which made Laravel 2 a fully MVC-compliant framework, built-in support for the inversion of control (IoC) principle, and a templating system called Blade. As a downside, support for third-party packages was removed in Laravel 2. Laravel 3 was released in February 2012 with a set of new features including the command-line interface (CLI) named Artisan, built-in support for more database management systems, database migrations as a form of version control for database layouts, support for handling events, and a packaging system called Bundles. An increase of Laravel's userbase and popularity lined up with the release of Laravel 3. Laravel 4, codenamed Illuminate, was released in May 2013. It was made as a complete rewrite of the Laravel framework, migrating its layout into a set of separate packages distributed through Composer, which serves as an application-level package manager. Such a layout improved the extensibility of Laravel 4, which was paired with its official regular release schedule spanning six months between minor point releases. Other new features in the Laravel 4 release include database seeding for the initial population of databases, support for message queues, built-in support for sending different types of email, and support for delayed deletion of database records called soft deletion. Laravel 5 was released in February 2015 as a result of internal changes that ended up in renumbering the then-future Laravel 4.3 release. New features in the Laravel 5 release include support for scheduling periodically executed tasks through a package called Scheduler, an abstraction layer called Flysystem that allows remote storage to be used in the same way as local file systems, improved handling of package assets through Elixir, and simplified externally handled authentication through the optional Socialite package. Laravel 5 also introduced a new internal directory tree structure for developed applications. Laravel 6 was released on September 3, 2019, shift blueprint code generation, introducing semantic versioning, compatibility with Laravel Vapor, improved authorization responses, improved job middleware, lazy collections, and sub-query improvements. The frontend scaffolding was removed from the main package and moved into the laravel/ui package. Laravel 7 was released on March 3, 2020, with new features like Laravel Sanctum, Custom Eloquent Casts, Blade Component Tags, Fluent String Operations and Route Model Binding Improvements. The latest Laravel version is version 8, which was released on September 8, 2020, with new features like Laravel Jetstream, model factory classes, migration squashing, Tailwind CSS for pagination views and other usability improvements."
        ),
        listOf(
            R.drawable.logo_rails,
            "Rails",
            "Ruby on Rails, or Rails, is a server-side web application framework written in Ruby under the MIT License. Rails is a model–view–controller (MVC) framework, providing default structures for a database, a web service, and web pages. It encourages and facilitates the use of web standards such as JSON or XML for data transfer and HTML, CSS and JavaScript for user interfacing. In addition to MVC, Rails emphasizes the use of other well-known software engineering patterns and paradigms, including convention over configuration (CoC), don't repeat yourself (DRY), and the active record pattern. David Heinemeier Hansson extracted Ruby on Rails from his work on the project management tool Basecamp at the web application company also called Basecamp (37Signals at the time). Hansson first released Rails as open source in July 2004, but did not share commit rights to the project until February 2005. In August 2006, the framework reached a milestone when Apple announced that it would ship Ruby on Rails with Mac OS X v10.5 \"Leopard\", which was released in October 2007. Rails version 2.3 was released on March 15, 2009, with major new developments in templates, engines, Rack and nested model forms. Templates enable the developer to generate a skeleton application with custom gems and configurations. Engines give developers the ability to reuse application pieces complete with routes, view paths and models. The Rack web server interface and Metal allow one to write optimized pieces of code that route around Action Controller. On December 23, 2008, Merb, another web application framework, was launched, and Ruby on Rails announced it would work with the Merb project to bring \"the best ideas of Merb\" into Rails 3, ending the \"unnecessary duplication\" across both communities. Merb was merged with Rails as part of the Rails 3.0 release. Rails 3.1 was released on August 31, 2011, featuring Reversible Database Migrations, Asset Pipeline, Streaming, jQuery as default JavaScript library and newly introduced CoffeeScript and Sass into the stack. Rails 3.2 was released on January 20, 2012 with a faster development mode and routing engine (also known as Journey engine), Automatic Query Explain and Tagged Logging. Rails 3.2.x is the last version that supports Ruby 1.8.7. Rails 3.2.12 supports Ruby 2.0. Rails 4.0 was released on June 25, 2013, introducing Russian Doll Caching, Turbolinks, Live Streaming as well as making Active Resource, Active Record Observer and other components optional by splitting them as gems. Rails 4.1 was released on April 8, 2014, introducing Spring, Variants, Enums, Mailer previews, and secrets.yml. Rails 4.2 was released on December 19, 2014, introducing Active Job, asynchronous emails, Adequate Record, Web Console, and foreign keys.  Rails 5.0 was released on June 30, 2016, introducing Action Cable, API mode, and Turbolinks 5. Rails 5.0.0.1 was released on August 10, 2016, with Exclusive use of rails CLI over Rake and support for Ruby version 2.2.2 and above. Rails 5.1 was released on April 27, 2017, introducing JavaScript integration changes (management of JavaScript dependencies from NPM via Yarn, optional compilation of JavaScript using Webpack, and a rewrite of Rails UJS to use vanilla JavaScript instead of depending on jQuery), system tests using Capybara, encrypted secrets, parameterized mailers, direct & resolved routes, and a unified form_with helper replacing the form_tag/form_for helpers. Rails 5.2 was released on April 9, 2018, introducing new features that include ActiveStorage, built-in Redis Cache Store, updated Rails Credentials and a new DSL that allows for configuring a Content Security Policy for an application.  Rails 5.2.2 was released on December 4, 2018, introducing numerous bug fixes and several logic improvements. Rails 6.0 was released on August 16, 2019, making Webpack default, adding mailbox routing, a default online rich-text editor, parallel testing, multiple database support, mailer routing and a new autoloader. Rails 6.1 was released on December 9, 2020, adding per-database connection switching, horizontal database sharding, eager loading of all associations, Delegated Types as an alternative to single-table inheritance, asynchronous deletion of associations, error objects, and other improvements and bug fixes."
        ),
        listOf(
            R.drawable.logo_reactjs,
            "React",
            "React is an open-source front-end JavaScript library for building user interfaces or UI components. It is maintained by Facebook and a community of individual developers and companies. React can be used as a base in the development of single-page or mobile applications. However, React is only concerned with state management and rendering that state to the DOM, so creating React applications usually requires the use of additional libraries for routing, as well as certain client-side functionality. React was created by Jordan Walke, a software engineer at Facebook, who released an early prototype of React called \"FaxJS\". He was influenced by XHP, an HTML component library for PHP. It was first deployed on Facebook's News Feed in 2011 and later on Instagram in 2012. It was open-sourced at JSConf US in May 2013. React Native, which enables native Android, iOS, and UWP development with React, was announced at Facebook's React Conf in February 2015 and open-sourced in March 2015. On April 18, 2017, Facebook announced React Fiber, a new a set of internal algorithms for rendering, as opposed to React's old rendering algorithm, Stack. React Fiber was to become the foundation of any future improvements and feature development of the React library. The actual syntax for programming with React does not change; only the way that the syntax is executed has changed. React's old rendering system, Stack, was developed at a time when the focus of the system on dynamic change was not understood. Stack was slow to draw complex animation, for example, trying to accomplish all of it in one chunk. Fiber breaks down animation into segments that can be spread out over multiple frames. Likewise, the structure of a page can be broken into segments that may be maintained and updated separately. JavaScript functions and virtual DOM objects are called \"fibers\", and each can be operated and updated separately, allowing for smoother on-screen rendering. On September 26, 2017, React 16.0 was released to the public. On February 16, 2019, React 16.8 was released to the public. The release introduced React Hooks. On August 10, 2020, the React team announced the first release candidate for React v17.0, notable as the first major release without major changes to the React developer-facing API."
        ),
        listOf(
            R.drawable.logo_spring,
            "Spring",
            "In October 2002, Rod Johnson wrote a book called \"Expert One-on-One J2EE Design and Development\" and published by Wrox. This book describes the current situation of Java enterprise application development, and points out some shortcomings in the use of Java EE and EJB component frameworks. In the book, he also proposed a solution based on plain old java objects (POJO-plain old java objects) and dependency injection. In the book, he showed how a high-quality, extensible online booking application that does not use EJB is built. In order to build the application, he wrote more than 30,000 lines of basic code. This includes many reusable Java interfaces and classes, such as ApplicationContext and BeanFactory. Because Java interface is the basic module of dependency injection, he named the root package of these classes com.interface21. Rod later explained that the 21 in the name refers to the 21st century! \"One-on-One J2EE Design and Development\" quickly became hot. Most of the basic code provided for free in the book is highly reusable, and soon some developers began to use them in their projects. Wrox created a web page for it, providing source code and errata. An online forum is also provided. Interestingly, 15 years later, this book and the principles mentioned in it are still relevant to the construction of high-quality Java Web applications. I strongly recommend adding this one to your collection. Soon after the book was published, the developers Juergen Hoeller and Yann Caroff persuaded Rod Johnson to create an open source project based on the underlying code. Rod, Juergen and Yann started working together on this project in about February 2003. Yann coined the name \"spring\" for the new framework. According to Rod, spring represents a new beginning after the winter of traditional J2EE. The following is an excerpt from \"Yann Caroff's review of Rod's book\" in January 2003. In June 2003, spring 0.9 was released under the Apache 2.0 license. In March 2004, spring 1.0 was released. Interestingly, before the 1.0 release, spring has been widely accepted by developers. In August 2004, Rod Johnson, Juergen Hoeller, Keith Donald and Colin Sampaleanu co-founded interface21, a company focused on spring consulting, training and support. Yann Caroff left the team earlier. Rod Johnson left the spring team in 2012, and Juergen Hoeller is still an active member of the spring development team. In October 2012, Mike Youngstrom submitted aFeature request, I hope to provide containerless Web application architecture support in the Spring framework. He discussed registering the web container service in the spring container started by the main method. Here is an excerpt from jira's request: Spring boot 1.1 (June 2014) Spring boot 1.2 (March 2015) Spring boot 1.3 (December 2016) Spring boot 1.4 (January 2017) Spring boot 1.5 (February 2017)"
        ),
        listOf(
            R.drawable.logo_symfony,
            "Symphony",
            "Symfony is a PHP web application framework for MVC applications. Symfony is free software and released under the MIT license. The symfony-project.com website launched on October 18, 2005. Symfony aims to speed up the creation and maintenance of web applications and to replace repetitive coding tasks. Symfony has a low performance overhead used with a bytecode cache. The first stable Symfony version — 1.0 — was released in the beginning of 2007 and was supported for three years. In mid-2008, version 1.1 was presented, which wasn’t compatible with the previous release, and it was difficult to upgrade any old project to this. Symfony 1.2 version was released shortly after this, at the end of 2008. Migrating between these versions was much easier, and there were no dramatic changes in the structure. The final versions of Symfony 1’s legacy family was released nearly one year later. Simultaneously, there were two version releases, 1.3 and 1.4. Both were identical, but Symfony 1.4 did not have deprecated features, and it was recommended to start new projects with it. Version 1.4 had 3 years of support. If you look into the code, version 1.x was very different from version 2. The company that was behind Symfony (the French company, SensioLabs) made a bold move and decided to rewrite the whole framework from scratch. The first release of Symfony2 web framework wasn’t perfect, but it was very promising. It relied on Git submodules (the composer did not exist back then). The 2.1 and 2.2 versions were closer to the one we use now, although it required a lot of effort to migrate to the upper level. Finally, the Symfony 2.3 was released — the first long-term support version within the 2.x branch. After this version, the changes provided within the next major versions (2.4, 2.5, and 2.6) are not so drastic and usually they do not break compatibility. Symfony 2.7.0 has been released in May 2015, 2.7 is the new LTS version of Symfony. Symfony 2.7.0 comes with more than 100 new features and enhancements. The transition from 2.6 to 2.7 represented new ways of doing things and removing deprecated features in 3.0. Symfony 2.8.0 has been released in October with a host of bug fixes. Symfony 3.1.0 has been released on may 30, 2016. As always, backward compatibility means that you should be able to upgrade easily without changing anything in your code."
        ),
        listOf(
            R.drawable.logo_vue,
            "Vue",
            "Vue is an open-source model–view–viewmodel front end JavaScript framework for building user interfaces and single-page applications. It was created by Evan You, and is maintained by him and the rest of the active core team members. Vue was created by Evan You, after he worked for the giant Google. The purpose of the framework was based on the development of user interfaces and single page applications (Single Page Application). The framework developed by You is open source and had its first commit in 2013, but it was only officially launched in February 2014."
        ),
        listOf(
            R.drawable.logo_yii,
            "Yii",
            "Yii is one of the long-living PHP frameworks out there that is constantly evolving with time as PHP is enhanced more and more. It’s interesting explore the history of Yii. In June 2004, Qiang Xue released the first version of PRADO framework. Prado was inspired by Apache Tapestry, Borland Delphi and Microsoft ASP.NET. Roughly at the same time, Zend conducted a competition called “gophp5” to promote the newly released PHP 5.0. Qiang re-implemented Prado to PHP 5 and it won the competition. At the time, the project was hosted on SourceForge. In the mid-2005, Wei Zhuo joined and helped to add i18n and l10n. Prado 2.0 was released. In May 2005, Prado was again rewritten to include new features inspired by Microsoft ASP.NET 2.0. In April 2006, version 3.0 was released. Since then then Prado team has mostly focused on code quality and stability. PRADO is still alive and used. In October 2006, Qiang announced an alpha version of Yii at the PRADO forums. On the 3rd of December 2008, Yii version 1.0.0 was released. Many ideas and some code were taken from PRADO, including: ActiveRecord, i18n, l10n, etc. Yii also drew more inspirations from RoR (convention over configuration, some AR features), symfony1 (filters, plugins) and Joomla (modules, message translation). Yii 1.0.0 was significantly faster than other frameworks of similar functionality, so community grew fast. In January 2010, Yii 1.1 was released. It included new features such as form builder, relational queries in AR, ready to use unit-testing framework and more. I’ve joined Yii team in 2010. By the end of the year, we were discussing Yii 1.2 while developing version 1.1. In May 2011, the Yii team decided to use a newer PHP versions and address legacy architectural challenges. That is, to start work on new major version 2.0. The first commits were on a private intenal repository. In May 2013, Yii 2.0 and its source code was presented to public. In October 2014, the first stable version we released."
        )
    )

    val languageList: MutableList<LanguageAndFrameworkModel>
    get() {
        val list = mutableListOf<LanguageAndFrameworkModel>()
        for (position in listLanguages){
            val data = LanguageAndFrameworkModel()
            data.poster = position[0] as Int
            data.title = position[1] as String
            data.detail = position[2] as String
            list.add(data)
        }
        return list
    }

    val frameworkList: MutableList<LanguageAndFrameworkModel>
    get() {
        val list = mutableListOf<LanguageAndFrameworkModel>()
        for (position in listFrameworks){
            val data = LanguageAndFrameworkModel()
            data.poster = position[0] as Int
            data.title = position[1] as String
            data.detail = position[2] as String
            list.add(data)
        }
        return list
    }
}
